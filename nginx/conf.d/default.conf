ldap_server localdir {
    # user search base.
    url "YOUR LDAP SERVER URL";
    # bind as
    binddn "cn=admin,dc=example,dc=com";
    # bind pw
    binddn_passwd YOUR_LDAP_PASSWORD;
    # group attribute name which contains member object
    # group_attribute member;
    # search for full DN in member object
    # group_attribute_is_dn on;
    # matching algorithm (any / all)
    satisfy any;
    # list of allowed groups
    # require group "CN=Admins,OU=My Security Groups,DC=company,DC=com";
    # require group "CN=New York Users,OU=My Security Groups,DC=company,DC=com";
    # list of allowed users
    # require 'valid_user' cannot be used together with 'user' as valid user is a superset
    require valid_user;
    # require user "CN=Batman,OU=Users,OU=New York Office,OU=Offices,DC=company,DC=com";
    #require user "CN=Robocop,OU=Users,OU=New York Office,OU=Offices,DC=company,DC=com";
}

server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /secured/ {
            auth_ldap           "LDAP Login Site";
            auth_ldap_servers   localdir;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}